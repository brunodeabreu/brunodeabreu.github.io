---
title: "#1 Deep learning for Coders fast.ai - Prep-Work"
description: |
  Pre-Work : a hands-on coding course from fast.ai
author:
  - name: Bruno
    url: https://brunodeabreu.github.io
#    orcid: 0000-0002-5300-3075
#    affiliation: Master of Environmental Data Science Program @ The Bren School (UCSB) & The National Center for Ecological Analysis and Synthesis
#    affiliation-url: https://ucsb-meds.github.io/
date: 2023-09-01
categories: [DL, python, fastai]
image: img/deep_learning.jpeg
---


# 1. Terminal


On Windows we can install PowerShell and WSL using, the first time you

```
wsl --install
```

* Tips :
    * Terminal Full Screen : `<Alt+Enter>`
    * Switch between users : `sudo -u <user> -i`
    * Check version and python location : `which python`
    * Install everything in `homedir` to do not mix the system python/files with our version of python used to DEV and experiment



## 1.1 tmux

To install tmux `sudo apt install tmux`

* [https://tmuxcheatsheet.com/](https://tmuxcheatsheet.com/)
* `Ctrl + b + %` : Divide terminal in the middle vertical
* `Ctrl + b + "` : Divide terminal in the middle horizontal
* `Ctrl + b + direction` : Move between terminals
* `Ctrl + b + z` : zoom in or zoom out a spefic terminal
* `Ctrl + d` : close


<br>


# 2. Install python

  * Github for conda mini-forge and mamba-forge installer [conda-forge/miniforge](https://github.com/conda-forge/miniforge)
  * Linux Manbaforge install

  ```
  wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh
  ```
    
  * Install Mambaforge, this going to install several libsn
    
  ```
    bash Mambaforge-Linux-x86_64.sh 
  ```
    
  * The command `which python` should show right now `/home/bruno/mambaforge/bin/python`
    

<br>


# 3. Setup `fastai`


## 3.1 Setup conda install

To setup fastai in our notebook [Github-Fastsetup](https://github.com/fastai/fastsetup)

* Run the wget to donwload the setupconda.sh and install

```
wget https://raw.githubusercontent.com/fastai/fastsetup/master/setup-conda.sh

bash setup-conda.sh

```
<br>


# 4. Install other packages using mamba


**Conda** and **Mamba** is two ways of doing the same thing, however  today mamba is very fast


* Install ipython : `mamba install ipython`

* Pytorch install :  [pytorch  get-started](https://pytorch.org/get-started/locally/)

  * CPU : `mamba install pytorch torchvision torchaudio cpuonly -c pytorch`
  
  * CUDA : `mamba install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia`


  * Test : ipython -> import torch
  
  
* Install Jupyter Lab  :   `mamba install jupyterlab`

  * Create a alias to _jupyter lab --no-browser_  : `alias jl=jupyter lab --no-browser`

* Install ipywidgets :  `mamba install ipywidgets`




# 5. Git

Git repository is a folder that contain files and sub-folders that we can store and git keeps a copy of every  version of files


## 5.1 Create new repo

The below figure describe how to create a new repo we can : 

* Make the repo private or **public**
* Add a readme file
* Configure **.gitignore**
* Choose a license


s
::: {.callout-important}
DO NOT share password or keys on github
:::


## 5.2 Configure SSH Key o Github and clone .git repository

STEPS :

1. On terminal create a public key `ssh-keygen`, it will create public (_id_rsa.pub_) and private (_id_rsa_) keys

2. In github.com/settings/ssh/ click in `New SSH Key` and add the content of _id_rsa.pub_

3. Now you will be able to clone the .git repository and save your changes


## 5.3 Basic Cmds : Commit, push, pull, status

The complete list of [git commands](https://git-scm.com/docs/git#_git_commands)

* **Commit** : `git commit -m <message>`
* **Push** : `git push`
* **Pull** : `git pull`
* **add** : `git add <file>`
* **remove** : `git rm <file>`
* **status** : `git status`


# 6. Jupyter lab

To start the jupyter notebook we can issue : `jupyter lab --no-browser`

Tip : 

  * create an alias like `alias jl=jupyter lab --no-browser` and just issue `jl` to start the jupyter lab

  * [Jupyter Docs](https://docs.jupyter.org/en/latest/)



# 7. Clone the Fastai book and install fastai

STEPS: 

1. Go to [fastbook on github ](https://github.com/fastai/fastbook) and click on Fork to create your copy of the book


2. Clone your version of book : ` git clone git@github.com:brunodeabreu/fastbook.git`


3. Install fastai : `mamba install -c fastchan fastai`

    * [docs.fast.ai](https://docs.fast.ai/)


4. Install fastbook : `mamba install -c fastchan fastbok` or `pip instal -Uqq fastbook`

::: {.callout-note}
When we install fastbook it also install fastai 
:::



# 8. Create an enviroment 

STEPS : 

1. Create : `mamba create -n tmp 'python<3.10'` fastcore

2. Activate: `mamba activate  tmp`

3. Deactivate: `mamba deactivate tmp`

::: {.callout-note}
To return to (base) we  can only issue `conda activate`
:::


# 9. Creating paperspace notebook

  Using [https://www.paperspace.com/artificial-intelligence](https://www.paperspace.com/artificial-intelligence) we can get a **FREE** GPU server.

  
We can signup with github  or gmail account and select `gradient` it will request you to create a project and after that you can create notebooks/servers.


# 10. Google Colab 

STEPS : 

1. Open [colab.research.google.com](https://colab.research.google.com/), you can sigup with your google account

2. Go to Ferramentas -> Configurações -> Gihub -> Autorizar com Github

3. Arquivo -> Abrir notebook -> Select your fastbook repository, if  you do not have your own copy fork from fastai/fastbook


![Config Gihub Repo  on Colab](img/colab_github.png)

4. Select the notebook and open in a new tab

5. Change the enviroment to TPU : Go to Ambiente de execução -> Alterar tipo de ambiente de exeção -> Select T4 GPU


# 11. Best option to access the book and notebooks

Open the [course.fast.ai](https://course.fast.ai/Resources/book.html) on  **Colab** session click on each chapter.

